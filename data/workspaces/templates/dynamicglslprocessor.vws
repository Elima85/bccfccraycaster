<?xml version="1.0" ?>
<VoreenData version="1">
    <Workspace version="2" GlobalDescription="" readonly="true">
        <VolumeContainer>
            <VolumeHandles>
                <VolumeHandle id="ref6">
                    <Origin url="../../volumes/nucleon.dat" />
                </VolumeHandle>
            </VolumeHandles>
        </VolumeContainer>
        <ProcessorNetwork version="11">
            <MetaData>
                <MetaItem name="Zoom" type="ZoomMetaData">
                    <transform.row0 x="1.1250001192092896" y="0" z="0" />
                    <transform.row1 x="0" y="1.1250001192092896" z="0" />
                    <transform.row2 x="-862.0382080078125" y="678.621826171875" z="1" />
                </MetaItem>
            </MetaData>
            <Processors>
                <Processor type="Canvas" name="Canvas" id="ref5">
                    <MetaData>
                        <MetaItem name="ProcessorGraphicsItem" type="PositionMetaData" x="271" y="-48" />
                        <MetaItem name="ProcessorWidget" type="WindowStateMetaData" visible="true" x="335" y="159" width="232" height="205" />
                    </MetaData>
                    <Properties>
                        <Property name="canvasSize">
                            <value x="232" y="205" />
                        </Property>
                        <Property name="showCursor" value="true" />
                    </Properties>
                    <InteractionHandlers />
                </Processor>
                <Processor type="MultiplanarProxyGeometry" name="MultiplanarProxyGeometry" id="ref0">
                    <MetaData>
                        <MetaItem name="ProcessorGraphicsItem" type="PositionMetaData" x="151" y="-403" />
                    </MetaData>
                    <Properties>
                        <Property name="slicePosX" value="0.5" />
                        <Property name="slicePosY" value="0.5" />
                        <Property name="slicePosZ" value="0.5" />
                    </Properties>
                    <InteractionHandlers />
                </Processor>
                <Processor type="VolumeSource" name="VolumeSource" id="ref2">
                    <MetaData>
                        <MetaItem name="ProcessorGraphicsItem" type="PositionMetaData" x="304" y="-519" />
                    </MetaData>
                    <Properties>
                        <Property name="volumeHandle">
                            <value ref="ref6" />
                        </Property>
                    </Properties>
                    <InteractionHandlers />
                </Processor>
                <Processor type="Background" name="Background" id="ref4">
                    <MetaData>
                        <MetaItem name="ProcessorGraphicsItem" type="PositionMetaData" x="271" y="-132" />
                    </MetaData>
                    <Properties>
                        <Property name="angle" value="180" />
                        <Property name="backgroundModeAsString" value="gradient" />
                        <Property name="color1">
                            <value x="1" y="1" z="1" w="1" />
                        </Property>
                        <Property name="color2">
                            <value x="0.2" y="0.2" z="0.2" w="1" />
                        </Property>
                        <Property name="repeat" value="0.5" />
                        <Property name="texture" value="" />
                    </Properties>
                    <InteractionHandlers />
                </Processor>
                <Processor type="MeshEntryExitPoints" name="MeshEntryExitPoints" id="ref1">
                    <MetaData>
                        <MetaItem name="ProcessorGraphicsItem" type="PositionMetaData" x="166" y="-318" />
                    </MetaData>
                    <Properties>
                        <Property name="camera" adjustProjectionToViewport="true" projectionMode="1" frustLeft="-0.04142136" frustRight="0.04142136" frustBottom="-0.04142136" frustTop="0.04142136" frustNear="0.1" frustFar="50" fovy="45">
                            <MetaData>
                                <MetaItem name="EditorWindow" type="WindowStateMetaData" visible="false" x="-933" y="353" />
                            </MetaData>
                            <position x="2.63004398" y="2.5898397" z="0.4131996" />
                            <focus x="0.06039451" y="-0.04139249" z="-0.09166569" />
                            <upVector x="-0.10834247" y="-0.08425289" z="0.99053693" />
                        </Property>
                        <Property name="jitterEntryPoints" value="false" />
                        <Property name="jitterStepLength" value="0.005" />
                        <Property name="supportCameraInsideVolume" value="true" />
                        <Property name="useCulling" value="true" />
                        <Property name="useFloatRenderTargets" value="false" />
                    </Properties>
                    <InteractionHandlers>
                        <Handler name="cameraHandler">
                            <Properties>
                                <Property name="cameraHandler.interactionMetaphor" value="trackball" />
                                <Property name="cameraHandler.moveBackward" lod="1" enabled="true" mouseAction="0" mouseButtons="0" keyCode="115" modifier="0" shareEvents="false" />
                                <Property name="cameraHandler.moveDown" lod="1" enabled="true" mouseAction="0" mouseButtons="0" keyCode="102" modifier="0" shareEvents="false" />
                                <Property name="cameraHandler.moveForward" lod="1" enabled="true" mouseAction="0" mouseButtons="0" keyCode="119" modifier="0" shareEvents="false" />
                                <Property name="cameraHandler.moveLeft" lod="1" enabled="true" mouseAction="0" mouseButtons="0" keyCode="97" modifier="0" shareEvents="false" />
                                <Property name="cameraHandler.moveRight" lod="1" enabled="true" mouseAction="0" mouseButtons="0" keyCode="100" modifier="0" shareEvents="false" />
                                <Property name="cameraHandler.moveUp" lod="1" enabled="true" mouseAction="0" mouseButtons="0" keyCode="114" modifier="0" shareEvents="false" />
                                <Property name="cameraHandler.rotate" lod="1" enabled="true" mouseAction="127" mouseButtons="1" keyCode="0" modifier="0" shareEvents="false" />
                                <Property name="cameraHandler.shift" lod="1" enabled="true" mouseAction="127" mouseButtons="1" keyCode="0" modifier="1" shareEvents="false" />
                                <Property name="cameraHandler.wheelZoom" lod="1" enabled="true" mouseAction="16" mouseButtons="96" keyCode="0" modifier="0" shareEvents="false" />
                                <Property name="cameraHandler.zoom" lod="1" enabled="true" mouseAction="127" mouseButtons="4" keyCode="0" modifier="0" shareEvents="false" />
                            </Properties>
                        </Handler>
                    </InteractionHandlers>
                </Processor>
                <Processor type="DynamicGLSLProcessor" name="DynamicGLSLProcessor" fragmentModified="true" fragmentFilename="..\..\..\src\qt\glsl\C:\Voreen\trunk\voreen-sc-32bit\data\workspaces\templates\..\..\..\src\qt\glsl\c:\Voreen\trunk\voreen-sc-32bit\data\workspaces\templates\..\..\..\src\qt\glsl\D:\voreensc\src\qt\glsl\D:\voreensc\src\qt\glsl\D:\voreensc\src\qt\glsl\D:\voreensc\src\qt\glsl\root\deploy\x86-vs2008-dynamic\modules\base\glsl/dynamicglsl.frag" vertexModified="true" vertexFilename="..\..\..\src\qt\glsl\C:\Voreen\trunk\voreen-sc-32bit\data\workspaces\templates\..\..\..\src\qt\glsl\c:\Voreen\trunk\voreen-sc-32bit\data\workspaces\templates\..\..\..\src\qt\glsl\D:\voreensc\src\qt\glsl\D:\voreensc\src\qt\glsl\D:\voreensc\src\qt\glsl\D:\voreensc\src\qt\glsl\root\deploy\x86-vs2008-dynamic\src\core\glsl\utils/passthrough.vert" geometryModified="false" geometryFilename="" id="ref3">
                    <MetaData>
                        <MetaItem name="ProcessorGraphicsItem" type="PositionMetaData" x="208" y="-225" />
                        <MetaItem name="ProcessorWidget" type="WindowStateMetaData" visible="false" x="792" y="238" width="800" height="480" />
                    </MetaData>
                    <Properties>
                        <Property name="blendFactor" value="0.75" />
                        <Property name="threshold" value="0.25" />
                    </Properties>
                    <InteractionHandlers />
                    <MetaData>
                        <MetaItem name="ProcessorGraphicsItem" type="PositionMetaData" x="236" y="-223" />
                        <MetaItem name="ProcessorWidget" type="WindowStateMetaData" visible="false" x="651" y="116" width="1008" height="667" />
                    </MetaData>
                    <fragmentSource>
                        <![CDATA[/**********************************************************************
 *                                                                    *
 * Voreen - The Volume Rendering Engine                               *
 *                                                                    *
 * Created between 2005 and 2012 by The Voreen Team                   *
 * as listed in CREDITS.TXT <http://www.voreen.org>                   *
 *                                                                    *
 * This file is part of the Voreen software package. Voreen is free   *
 * software: you can redistribute it and/or modify it under the terms *
 * of the GNU General Public License version 2 as published by the    *
 * Free Software Foundation.                                          *
 *                                                                    *
 * Voreen is distributed in the hope that it will be useful,          *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of     *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the       *
 * GNU General Public License for more details.                       *
 *                                                                    *
 * You should have received a copy of the GNU General Public License  *
 * in the file "LICENSE.txt" along with this program.                 *
 * If not, see <http://www.gnu.org/licenses/>.                        *
 *                                                                    *
 * The authors reserve all rights not expressly granted herein. For   *
 * non-commercial academic use see the license exception specified in *
 * the file "LICENSE-academic.txt". To get information about          *
 * commercial licensing please contact the authors.                   *
 *                                                                    *
 **********************************************************************/

#include "modules/vrn_shaderincludes.frag"

/*******************/
/* Declare Inports */
/*******************/
//$ @name = "volumehandle", @type = "volumeport", @params = "volume_"
uniform VOLUME_STRUCT volume_;

//$ @name = "inport0", @params = "entryParams_"
uniform SAMPLER2D_TYPE entryTex_;
uniform TEXTURE_PARAMETERS entryParams_;

//$ @name = "inport1", @params = "exitParams_", @colorformat = "GL_RGBA"
uniform SAMPLER2D_TYPE exitTex_;
uniform TEXTURE_PARAMETERS exitParams_;


/**********************/
/* Declare Properties */
/**********************/
//$ @name = "blendFactor", @label = "Blend Factor", @value = 0.75, @min = 0.0, @max = 1.0
uniform float blendFactor;

//$ @name = "threshold", @label = "Threshold", @value = 0.25, @min = 0.0, @max = 1.0
uniform float threshold;

/***
 * The main method.
 ***/
void main() {
	vec2 p = gl_FragCoord.xy * screenDimRCP_;
	vec4 texcoords0 = textureLookup2Dnormalized(entryTex_, entryParams_, p);
	vec4 texcoords1 = textureLookup2Dnormalized(exitTex_, entryParams_, p);
	float voxel0 = getVoxel(volume_, texcoords0.xyz).a;
	float voxel1 = getVoxel(volume_, texcoords1.xyz).a;
	vec4 result;
	if (voxel0 > threshold && voxel1 > threshold) {
		result = mix(texcoords0, vec4((voxel0+voxel1)/2.0), blendFactor);
		result.a = 1.0;
	} 
    else {
		result = texcoords0;
	}
    FragData0 = result;
}
]]>
                    </fragmentSource>
                    <vertexSource>
                        <![CDATA[/**********************************************************************
 *                                                                    *
 * Voreen - The Volume Rendering Engine                               *
 *                                                                    *
 * Created between 2005 and 2012 by The Voreen Team                   *
 * as listed in CREDITS.TXT <http://www.voreen.org>                   *
 *                                                                    *
 * This file is part of the Voreen software package. Voreen is free   *
 * software: you can redistribute it and/or modify it under the terms *
 * of the GNU General Public License version 2 as published by the    *
 * Free Software Foundation.                                          *
 *                                                                    *
 * Voreen is distributed in the hope that it will be useful,          *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of     *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the       *
 * GNU General Public License for more details.                       *
 *                                                                    *
 * You should have received a copy of the GNU General Public License  *
 * in the file "LICENSE.txt" along with this program.                 *
 * If not, see <http://www.gnu.org/licenses/>.                        *
 *                                                                    *
 * The authors reserve all rights not expressly granted herein. For   *
 * non-commercial academic use see the license exception specified in *
 * the file "LICENSE-academic.txt". To get information about          *
 * commercial licensing please contact the authors.                   *
 *                                                                    *
 **********************************************************************/

/**
 * Simply pass through the provided vertex data.
 */
void main() {
    gl_TexCoord[0] = gl_MultiTexCoord0;
    gl_Position = ftransform();
    gl_FrontColor = gl_Color;
}
]]>
                    </vertexSource>
                </Processor>
            </Processors>
            <Connections>
                <Connection>
                    <Outport name="proxygeometry.out">
                        <Processor type="MultiplanarProxyGeometry" ref="ref0" />
                    </Outport>
                    <Inport name="proxgeometry.geometry">
                        <Processor type="MeshEntryExitPoints" ref="ref1" />
                    </Inport>
                </Connection>
                <Connection>
                    <Outport name="volumehandle.volumehandle">
                        <Processor type="VolumeSource" ref="ref2" />
                    </Outport>
                    <Inport name="volume.in">
                        <Processor type="MultiplanarProxyGeometry" ref="ref0" />
                    </Inport>
                </Connection>
                <Connection>
                    <Outport name="volumehandle.volumehandle">
                        <Processor type="VolumeSource" ref="ref2" />
                    </Outport>
                    <Inport name="volumehandle">
                        <Processor type="DynamicGLSLProcessor" ref="ref3" />
                    </Inport>
                </Connection>
                <Connection>
                    <Outport name="image.output">
                        <Processor type="Background" ref="ref4" />
                    </Outport>
                    <Inport name="image.input">
                        <Processor type="Canvas" ref="ref5" />
                    </Inport>
                </Connection>
                <Connection>
                    <Outport name="image.entrypoints">
                        <Processor type="MeshEntryExitPoints" ref="ref1" />
                    </Outport>
                    <Inport name="inport0">
                        <Processor type="DynamicGLSLProcessor" ref="ref3" />
                    </Inport>
                </Connection>
                <Connection>
                    <Outport name="image.exitpoints">
                        <Processor type="MeshEntryExitPoints" ref="ref1" />
                    </Outport>
                    <Inport name="inport1">
                        <Processor type="DynamicGLSLProcessor" ref="ref3" />
                    </Inport>
                </Connection>
                <Connection>
                    <Outport name="outport0">
                        <Processor type="DynamicGLSLProcessor" ref="ref3" />
                    </Outport>
                    <Inport name="image.input">
                        <Processor type="Background" ref="ref4" />
                    </Inport>
                </Connection>
            </Connections>
            <CoProcessorConnections />
            <PropertyLinks />
            <PropertyStateCollections />
            <PropertyStateFileReferences />
            <PropertyStateDirectoryReferences />
        </ProcessorNetwork>
        <Animation />
    </Workspace>
</VoreenData>
