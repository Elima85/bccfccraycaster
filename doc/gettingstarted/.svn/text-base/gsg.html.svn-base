<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <title>VoreenVE - Getting Started Guide</title>
</head>

<body>

<h1>VoreenVE - Getting Started</h1>

<p>
  VoreenVE (Voreen Visualization Environment) is an application developed to construct processor
  networks for Voreen with an easy to use graphical user interface. The underlying concept is based
  on the idea of dataflow networks found in many image processing environments. VoreenVE allows to
  create complex rendering networks by simply dragging the desired processors
  into the workspace by using the mouse and connecting them by drawing the required
  connections.
</p>

<a name="toc"></a>
<h2>Table of Contents</h2>

<ul>
	<li><a href="#main_window">Main Window</a></li>
	<li><a href="#menu">Toolbar</a></li>
	<li><a href="#scene">Network Editor</a></li>
	<li><a href="#output">Canvas Interaction</a></li>
	<li><a href="#properties">Properties</a></li>
	<li><a href="#processor_list">Processor List</a></li>
    <li><a href="#howto_loadfiles">Loading Data Sets</a></li>
    <li><a href="#texture_container">Render Target View</a></li>
</ul>

<a name="main_window"></a>
<h2>Main Window</h2>

<p>The following screenshot shows a typical state of a VoreenVE session:</p>
<br>
<img src="images/image_numbers.png" alt="main window">

<ul>

  <li>The green numbers indicate the main components:
	
    <ol>

	<li>The <i>network editor</i> shows the current processor network and allows the user to modify it interactively.</li>

	<li>The <i>canvas window</i> shows the result produced by the current network. When there are multiple canvas processors in your network, also multiple canvas windows will appear.</li>

	<li>The <i>processors list</i> shows all available processors. These can be used to construct networks.</li>

	<li>The <i>properties</i> allow configuration of the selected processor.</li>

	<li>The <i>volume container</i> shows the currently loaded volumes.</li>

    </ol>

  </li>
</ul>

<h3>Modes</h3>

<p>
VoreenVE can be used in <i>development mode</i> and <i>visualization mode</i>.
Rendering networks are constructed in the development mode. Switching to
visualization mode hides the network editor and displays a larger
visualization window. While the layout of the rendering network cannot be
changed in visualization mode, it is still possible to modify
properties of the processors in the network. However, property editing in the
visualization mode is restricted to those properties, where the eye symbol is
set in the development mode.
</p>

<p>The same network in visualization mode looks like this:</p>
<br>
<img src="images/vis_mode.png" alt="visualization mode">

<a name="menu"></a>
<h2>Toolbar</h2>

<p>The picture below shows the toolbar entries and their function.</p>
<br>
<img src="images/toolbar.png">


<ul>
	<li><b>New Workspace</b> - Create a new empty workspace.</li>
	<li><b>Open Workspace...</b> - Load an existing workspace.</li>
	<li><b>Save Workspace</b> - Save the current workspace.</li>
	<li><b>Save Workspace as...</b> - Save the current workspace under a different file name.</li>
	<li><b>Load Data Set...</b> - Load a volume data set (See <a href="#howto_loadfiles">Loading data sets</a>).</li>
	<li><b>Load DICOM Slices...</b> - Load the content of a directory containing DICOM slices (only available when Voreen has been compiled with DICOM support).</li>
	<li><b>Export Network...</b> - Export the current network.</li>
	<li><b>Import Network...</b> - Import an existing network, replacing the current network in the workspace.</li>
	<li><b>Quit</b> - Exit Voreen.</li>
	<li><b>Development Mode</b> - Switch to development mode.</li>
	<li><b>Visualization Mode</b> - Switch to visualization mode.</li>
	<li><b>Processors</b> - Hide/show the processor list (only available in network mode).</li>
	<li><b>Properties</b> - Hide/show the property view.</li>
	<li><b>Volumes</b> - Hide/show information about the currently loaded volume data sets.</li>
	<li><b>Input Mapping</b> - Hide/show the currently set input mapping for handling keyboard and mouse events.</li>
	<li><b>Debug Console</b> - Hide/show a debug console containing log messages.</li>
	<li><b>Render Targets</b> - Hide/show the render target view, which shows intermediate rendering results, useful for debugging.</li>
	<li><b>Snapshot</b> - Save the content of one of the canvases into an image file.</li>
	<li><b>Animation</b> - Create animations using camera paths and save these animations as videos.</li>
	<li><b>Rebuild Shaders</b> - Rebuild all currently load shader programs, which allows runtime shader editing with external programs.</li>
</ul>

<h3>Networks and Workspaces</h3>

<p>
VoreenVE can save and load workspaces. Workspaces are the project files of Voreen, which
contain and store the entire state. <i>Networks</i> contain just the current rendering
network, and can be exchanged between workspaces by using the export/import functionality.
</p>

<a name="scene"></a>
<h2>Network Editor</h2>

<h3>Processors</h3>

<p>This image shows how a processor is displayed in the VoreenVE network editor:</p>
<br>
<img src="images/processor.png">

<p>A processor can have several kinds of ports: inports are located on the upper
side of each processor item, outports are found on the lower side, and
coprocessor ports are placed on the left. 
</p>

<h3>Creating Dataflow Networks</h3>

<p>In the network editor the graphical representation of the current network is
shown. In order to build a dataflow network, you can simply add new processors
by dragging them from the processor list into the network editor. Processor can
be connected via their different ports, however the port types have to match
(different types are identifiable by their colors).
</p>

<p>Ports are connected by pressing the left mouse button over an outport
(located on the lower side of a processor) and dragging the appearing arrow to
an inport (on the upper side of a processor). The arrow indicates whether a
connection to the inport at the current mouse position is possible or not by
changing its color to green respective red. Releasing the mouse button over a
valid inport (green arrow) creates a connection.
</p>


<h3>Working with Networks</h3>

<p>In the following it is described, how a network can be modified by the user.
</p>

<ul>
  <li>A processor can be <b>selected</b> by clicking on it. Multiple processors can be selected by holding the <i>CTRL</i> key
	and selecting another one or by spanning a rectangle around the processors using the left mouse button.</li>

  <li>A processor can be <b>moved</b> by clicking on it, moving it to the desired position and releasing the mouse button.</li>

  <li><b>Renaming</b> a processor can be done using the context menu.</li>

  <li>Processors and arrows can be <b>deleted</b> by selecting them and either using the delete entry from the context menu (just for processors) or by pressing the <i>DEL</i> key.</li>

  <li>The <b>zoom level</b> of the network view can be altered via the mouse wheel or by using the <i>+</i> and <i>-</i> keys.</li>

</ul>

<p>
For arrow connections that handle image data, the intermediate result can be shown by
hovering the mouse over the connection arrow until a tooltip appears:
</p>
<br>
<img src="images/tooltip.png">


<a name="output"></a>
<h2>Canvas Interaction</h2>

<p>
Within each canvas you can rotate the
camera by moving the mouse in the window while pressing the left mouse
button. Using the mouse wheel or moving the mouse up and down while pressing the
right mouse button, zooms the visualization. Pressing <i>SHIFT</i> and the left
button moves the scene.
</p>
<br>
<img src="images/preview.png">

<a name="properties"></a>
<h2>Properties</h2>

<p>Properties are used to configure the selected processor. Changes become
visible immediately in the rendering output. The eye symbols on the right of
each property entry toggle its visibility in the visualization mode. In the following example,
several properties have been set to be not visible in the visualization mode:
</p>
<br>
<img src="images/property.png">

<a name="processor_list"></a>
<h2>Processor List</h2>

<p>The processor list displays all available processors that can be
used to build networks. You can search for processors by typing in the
text box at the top. Furthermore, you can sort the list using the tool
drop-down button, and the current code state of each processor is indicated
by the colored dot. The text box in the bottom shows a brief description of
the processor functionality.
</p>
<br>
<img src="images/processors.png">

<p>
You can add processors to your network by dragging them from the list into the network editor.
</p>

<a name="howto_loadfiles"></a>
<h2>Loading Data Sets</h2>

<p>To load a data set click on "Load data set..." in the toolbar or in the
file-menu. The data set is then added to the volume container. To render the
loaded data set select the <b>VolumeSource</b> processor in the network and
choose the data set within the combo box.
</p>
<br>
<img src="images/vss_proc.png">

<a name="texture_container"></a>
<h2>Render Target View</h2>

<p>The render target view can be used to inspect intermediate rendering
results. A left-click enlarges a texture, a second click shrinks it
again. With the context menu, alpha-channels and depth buffers can be accessed.
</p>
<br>
<img src="images/tc.png">


</body>
</html>
